---
import Layout from '../layouts/Layout.astro';
import data from '../../public/data/projets.json';
import Navbar from '../components/Navbar.astro';
import ReactLightbox from '../components/ReactLightbox';

export const getStaticPaths = async () => {
	const pages = data;
	return pages.map(({ slug, ...props }) => ({
		params: { slug },
		props,
	}));
}


const { name, description, images, type } = Astro.props;

---
<Layout title={`${name} - YaÃ«lle Zaoui`}>
	<Navbar />
	<section>
		<div class="container is-fluid">
			<div class="hero">
				<div class="overlay" />
				<div class="landscape" style=`background-image: linear-gradient(180deg, rgba(0, 0, 0, .4), rgba(24, 24, 24, .2)), url(${images[0]})`>
					<div class="header">
						<a href="/projets" class="back reveal-3">
							<div class="btn-circle">
							  <img src="img/back.svg">
							</div>
							<p>Retour</p>
						</a>
						<h1 class="title reveal-2">{name}</h1>
						<div class="tag reveal-3">
							<p>{type}</p>
						</div>
					</div>
				</div>
				<a href="#down" class="down">
					<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"><path fill="currentColor" d="m12 20l-8-8l1.4-1.425l5.6 5.6V4h2v12.175l5.6-5.6L20 12l-8 8Z"/></svg>
				</a>
			</div>
		</div>
	</section>
	<section id="down">
		<div class="container is-fluid">
			<div>
				<div class="columns">
					<div class="column reveal-1">
						<!-- @ts-ignore -->
						<ReactLightbox client:visible thumbnails={true} poster={images[1]} sources={images.map(image => ({ src: image }))} />

					</div>
					<div class="column reveal-1">
						{description.trim().split(". ").map((sentence: string) => {
							return <p class="sentence">{sentence}</p>
						})}
					</div>
				</div>
			</div>
		</div>
	</section>
</Layout>

<style lang="scss">
	@keyframes slideIn {
		0% {
			padding-bottom: 100%;
		}
		100% {
			padding-bottom: 0;
		}
	}

	@keyframes scrollDown {
		0%{
			transform: translateY(-15px);
			opacity: 0;
		}
		50%{
			transform: translateY(0px);
			opacity: 1;
		}
		100%{
			transform: translateY(15px);
			opacity: 0;
		}
	}

	section {
		background-color: white;
		padding-top: 100px;
		min-height: 100vh;
		overflow: hidden;

		img, .landscape {
			border-radius: 5px;
		}
	}

	.hero {
		position: relative;
		height: 85vh;
		width: 100%;
		overflow: hidden;

		.overlay {
			position: absolute;
			width: 100%;
			bottom: 0;
			background-color: white;
			animation: slideIn 2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
			animation-delay: 0.5s;
		}

		.landscape {
			width: 100%;
			height: 100%;
			background-position: center;
			background-size: cover;
		}

		.down {
			color: white;
			position: absolute;
			bottom: 10px;
			left: 50%;
			transform: translate(-50%, -50%);
			border: solid 1px white;
			border-radius: 50%;
			display: flex;
			justify-content: center;
			align-items: center;
			flex-direction: column;
			padding: 5px;
			overflow: hidden;

			svg {
				animation: scrollDown 2s ease-in-out infinite;
			}
		}
	}

	.header {
		color: white;
		margin-top: 20px;
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 0 30px;

		.back {
			color: inherit;
			display: flex;
			justify-content: center;
			align-items: center;
		}

		.btn-circle {
			min-height: 2.5rem;
			min-width: 2.5rem;
			border-radius: 100%;
			background-color: rgba(248,251,252,.2);
			display: flex;
			justify-content: center;
			align-items: center;
			margin-right: 10px;
		}

		h1 {
			color: inherit;
			font-size: 3rem !important;
			font-family: 'PF Din Text Universal regular';
			margin-bottom: 80px !important;
			letter-spacing: 2px;
			text-align: center;
			margin-bottom: 0 !important;
		}

		.tag {
			background-color: transparent;
			padding: 3px 20px;
			border: 1px solid white;
			border-radius: 20px;
			color: inherit;
			font-size: 0.875rem;
		}
	}

	.column {
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		// border: solid 1px yellow;

		.sentence {
			color: black !important;
			width: 80%; // same as lightbox image
			font-family: 'PF Din Text Universal regular';
		}
	}

	@media screen and (max-width: 580px) {
		.header {
			flex-direction: column;
			height: 100%;
			justify-content: space-around;
		}
	}
</style>